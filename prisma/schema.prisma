// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Recipe {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  imageUrl String? @db.Text
  materials Material[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Material {
  id Int @id @default(autoincrement())
  recipeId Int
  name String @db.VarChar(255)
  amount String? @db.VarChar(10)
  unit Unit @relation(fields: [unitName], references: [name], onDelete: Cascade)
  unitName String
  isToTaste Boolean @default(false)
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id Int @id @default(autoincrement())
  name String @db.VarChar(10)
  materials Material[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name])
}